@use "sass:math";
@use "vars" as *;

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ФУНКЦІЇ

//Percent
@function percent($px, $from: 100) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}
//REM
@function to-rem($px, $current: 16) {
	$result: math.div($px, $current) + rem;
	@return $result;
}
//EM
@function to-em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}

@function get-value($min-width, $max-width, $size-at-min-width, $size-at-max-width, $unit) {
  $return-value: calc(
    #{$size-at-min-width + $unit} + (#{$size-at-max-width - $size-at-min-width}) * ((100vw - #{$min-width + $unit}) /
          (#{$max-width - $min-width}))
  );
  @return $return-value;
}
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// АДАПТИВНА ВЛАСТИВІСТЬ

@mixin adaptive-property($property, $mobile-size, $tablet-size, $desktop-size, $unit: px) {
  $min-width: 320;
  $tablet-width: 767.98;
  $max-width: $container-width;

  @if ($unit == rem) {
    $max-width: to-rem($container-width, 16);
    $min-width: to-rem($min-width, 16);
    $tablet-width: to-rem($mobile-l, 16);
  }

  @if ($tablet-size == 0) {
    #{$property}: $desktop-size + $unit;

    @media (max-width: #{$container-width}px) {
      #{$property}: get-value($min-width, $max-width, $mobile-size, $desktop-size, $unit);
    }
  } @else {
    #{$property}: get-value($min-width, $tablet-width, $mobile-size, $tablet-size, $unit);

    @media (min-width: 767.98px) {
      #{$property}: get-value($tablet-width, $max-width, $tablet-size, $desktop-size, $unit);
    }
    @media (min-width: #{$container-width}px) {
      #{$property}: $desktop-size + $unit;
    }
  }
}

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// БРЕЙКПОІНТИ

@mixin on-desktop {
  @media (min-width: #{$pc}px) {
    @content;
  }
}
@mixin on-tablet {
  @media (min-width: #{$tablet}px) {
    @content;
  }
}
@mixin on-laptop {
  @media (max-width: 1024px) {
    @content;
  }
}
@mixin on-mobile-l {
  @media (min-width: #{$mobile-l}px) {
    @content;
  }
}

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// FLEX

@mixin flex-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flex($x: center, $y: start) {
  display: flex;
  justify-content: $x;
  align-items: $y;
}
@mixin cards-flex($column-gap) {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  column-gap: $column-gap;
}

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// GRID

@mixin grid-cards($type: fit, $min: 280px, $max: 1fr, $gap: 30px) {
	display: grid;
	gap: $gap;
	grid-template-columns: repeat(auto-#{$type}, minmax($min, $max));
}
@mixin grid-container($quantity, $column-gap, $row-gap) {
	display: grid;
	min-width: 0;
	grid-template-columns: repeat($quantity, minmax(280px, 1fr));
  column-gap: $column-gap;
  row-gap: $row-gap;
}

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

@mixin position-r {
  position: relative;
  inset: 0;
}
@mixin ibg($size: cover) {
  overflow: hidden;
  img {
    width: 100%;
    height: 100%;
    object-fit: $size;
    object-position: center;
  }
}
@mixin p-margin {
  &__text p:not(:last-child) {
    margin-bottom: 0.625rem;
  }
}

// Трикутник
@mixin triangle($direction, $color, $size, $size2: $size) {
	@if $direction == left {
		border: #{$size2}px solid transparent;
		border-right: #{$size}px solid $color;
	}
	@if $direction == right {
		border: #{$size2}px solid transparent;
		border-left: #{$size}px solid $color;
	}
	@if $direction == top {
		border: #{$size2}px solid transparent;
		border-bottom: #{$size}px solid $color;
	}
	@if $direction == bottom {
		border: #{$size2}px solid transparent;
		border-top: #{$size}px solid $color;
	}
}
